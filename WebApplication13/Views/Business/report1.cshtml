@model RepTableArrays
@using System.Collections;

@{
    ViewData["Title"] = "report1";

    int IndexTable = 0;

    void CreateTable(RepTableArrays RTA)
    {
        IndexTable++;
        <!-- Table -->
        <table id="dtable @IndexTable" class="table table-sm table-striped mb-0 table-bordered" style="border-collapse: collapse; border-spacing: 0; width: 100%;">
            @if (String.IsNullOrWhiteSpace(RTA.Title))
            {
                <thead class="bg-primary text-white">
                    <tr>
                        @for (var i = 0; i < RTA.ColsName.Length; i++)
                        {
                            <th>@RTA.ColsName[i] [@RTA.ColsType[i]]</th>
                        }
                    </tr>
                </thead>
            }
            else
            {
                <caption style="caption-side:top">@RTA.Title</caption>
            }
            <tbody>
                @foreach (var item in RTA.Rows)
                {
                <tr>
                    @for (var i = 0; i < item.Values.Length; i++)
                    {
                        dynamic Value = item.Values[i];
                        Type Selector = Value.GetType();

                        if (Selector == typeof(RepTableArrays))
                        {
                            // Рекурсивный вызов функции...
                            RepTableArrays there = Value;
                            <td>@{CreateTable(there);}</td>
                        }
                        else if (Selector == typeof(RepTableArrays))
                        {
                            UserCell there = Value;
                            <td>
                                @Html.Partial("_cellUser", there)
                            </td>
                        }
                        else if (Value.GetType() == typeof(ServiceObjectCell))
                        {
                            ServiceObjectCell there = Value;
                            <td>
                                @Html.Partial("_cellSObject", there)
                            </td>
                        }
                        else if (Value.GetType() == typeof(cellCircle))
                        {
                            cellCircle there = Value;
                            <td>
                                @Html.Partial("_cellCircle", there)
                            </td>
                        }
                        else if (Value.GetType() == typeof(cellProgressBar))
                        {
                            cellProgressBar there = Value;
                            <td>
                                @Html.Partial("_cellProgressBar", there)
                            </td>
                        }
                        else
                        {
                            switch (RTA.ColsType[i])
                            {
                                case RepColType.Email: // Почта
                                    <td>mailto: @Value</td>
                                    break;

                                case RepColType.FilesV: // Список файлов
                                    if (Value is IEnumerable)
                                    {
                                        List<myFiles> there = Value;
                                        <td>@Html.Partial("_FilesV", there)</td>
                                    }
                                    break;

                                default: // Текст
                                    <td>@Value</td>
                                    break;
                            }
                        }

                    }
                </tr>
                }
            </tbody>
        </table>
    }

}

@section CSS_first {

}

<div class="card">
    <div class="card-header">
    </div>
    <div class="card-body">
        @{
            CreateTable(Model);
        }
    </div>
</div>


@Html.Partial("_DiagramCircle")
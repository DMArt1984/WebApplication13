@model List<WorkInfo>

@{
    int FilterSO = Convert.ToInt32(ViewData["ServiceObjectId"]); // выборка по обслуживанию
    bool IsAdmin = ViewContext.HttpContext.User.IsInRole("Admin") || ViewContext.HttpContext.User.IsInRole("SuperAdmin");

    var Obj = Model.Select(x => x.ServiceObjectId).Distinct();
    if (Obj != null && Obj.Count() == 1)
    {
        ViewData["Title"] = $"Статистика обслуживания для {@Model.First(x => x.ServiceObjectId == Obj.First()).ServiceObjectTitle}";
    }
    else
    {
        ViewData["Title"] = "Статистика обслуживания";
    }
}

@section CSS_first {
    @Html.Partial("_DTable_CSS_first")
}

<!-- получение локального времени -->
<script src="~/assets/dm/localtime.js"></script>

<!-- Карточка-->
<div class="card">

    @if (FilterSO > 0)
    {
        <div class="card-header bg-secondary d-flex justify-content-between align-items-center">
            @*<h4 class="text-secondary">Список обслуживаний</h4>
                <div class="">*@
            <a class="btn btn-secondary btn btn-block" title="Объект" asp-action="SOInfo" asp-route-Id="@FilterSO"><i class="far fa-arrow-alt-circle-up fa-lg"></i> Перейти в объект</a>
            @if (IsAdmin && ViewBag.EnableAdd)
            {
                <!-- Добавить -->
                <a class="btn btn-light btn btn-block" title="Добавить" asp-action="WorkEdit" asp-route-Id="0" asp-route-ServiceObjectId="@FilterSO" asp-route-pageInfo="false"><i class="fas fa-plus"></i> Добавить новое обслуживание</a>
            }
            @*</div>*@
        </div>
    }
    <!-- Таблица -->
    <div class="card-body">
        <div id="upp" class="d-flex justify-content-between"></div>
        <table id="dtable" class="table table-striped mb-0" style="border-collapse: collapse; border-spacing: 0px; width: 100%;" role="grid" aria-describedby="datatable_info">
            <thead class="bg-primary text-white">
                <tr>
                    @*<th>ID</th>*@
                    @if (FilterSO == 0)
                    {
                        <th>Объект</th>
                    }
                    <th>Начало</th>
                    <th>Выполнено</th>
                    <th>Статус</th>
                    <th>Шаги</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.OrderByDescending(x => x.Id))
                {
                    var DT_Stop = (item.Status == 9) ? item.DT_Stop : "";

                    <tr>
                        @*<th scope="row">@item.Id</th>*@
                        @if (FilterSO == 0)
                        {
                            <td>
                                @Html.Partial("_cellSObject", new ServiceObjectCell { Id = item.ServiceObjectId, ObjectTitle = item.ServiceObjectTitle, ObjectCode = null })
                            </td>
                        }
                        <td>
                            <script>document.write(UTC_To_LocalTime('@item.DT_Start'));</script>
                        </td>
                        <td>
                            <script>document.write(UTC_To_LocalTime('@DT_Stop'));</script>
                        </td>
                        <td>@item.StatusRus()</td>
                        <td>
                            <small>
                                <ol>
                                    @foreach (var st in item.Steps.OrderBy(x => x.Index))
                                    {
                                        if (st.Status > 0)
                                        {
                                            //var DT = st.DT_Start;
                                            //if (st.DT_Stop != "")
                                            //    DT += "/" + st.DT_Stop;
                                            <li>
                                                @st.StatusRus() @Html.Partial("_cellUser", new UserCell { Id = "0", UserName = st.UserName, Email = st.UserEmail })
                                                <script>document.write(UTC_To_LocalTime('@st.DT_Start'));</script> /
                                                <script>document.write(UTC_To_LocalTime('@st.DT_Stop'));</script>
                                            </li>
                                        }
                                    }
                                </ol>
                            </small>
                        </td>
                        <td>
                            <div class="d-flex flex-row px-1">
                                <a class="btn btn-outline-light btn-sm edit" title="Просмотр" asp-action="WorkInfo" asp-route-Id="@item.Id" asp-route-ServiceObjectId="@FilterSO" asp-route-pageInfo="false">
                                    <i class="far fa-eye"></i>
                                </a>
                                @*<a class="col btn btn-outline-secondary btn-sm edit" title="Выполненные шаги" asp-action="WorkStepsList" asp-route-WorkId="@item.Id" asp-route-ServiceObjectId="@item.ServiceObjectId" asp-route-pageInfo="false">
                                        <i class="fas fa-align-justify"></i>
                                    </a>*@
                                @if (IsAdmin)
                                {
                                    <a class="btn btn-outline-danger btn-sm edit" title="Удалить" data-bs-toggle="modal" data-bs-target="#myModalDel" onclick="SetWindow(@item.Id, '@item.ServiceObjectTitle')">
                                        <i class="fas fa-trash-alt px-1"></i>
                                    </a>
                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div id="down_lr" class="d-flex justify-content-between"></div>
    </div>

</div>

<!-- sample modal [ myModalDel ] content -->
@Html.Partial("popup_WorkDel")
<!-- /.modal -->


@section Scripts {
    @Html.Partial("_DTable_Scripts")

    <script>
        $(document).ready(function () {
            var table = $('#dtable').DataTable({
                language: {
                    emptyTable: "Нет данных для отображения в таблице",
                    zeroRecords: "Записи не найдены",
                    lengthMenu: "Показывать _MENU_ записей",
                    search: "Поиск: ",
                    info: "Показаны записи с _START_ по _END_. Всего записей _TOTAL_",
                    infoEmpty: "Нет записей",
                    infoFiltered: "(отфильтровано из _MAX_ записей)",
                    //подписи кнопок навигации по страницам
                    paginate: {
                        previous: "<i class='mdi mdi-chevron-left'>",
                        next: "<i class='mdi mdi-chevron-right'>"
                    },
                    //подписи в окне выбора фильтра
                    searchPanes: {
                        title: {
                            _: 'Выбрано фильтров: %d шт.',
                            0: 'Фильтры не выбраны'
                        },
                        collapseMessage: 'Свернуть панели',
                        showMessage: 'Развернуть панели',
                        clearMessage: 'Сбросить фильтры',
                        collapse: { 0: '<i class="mdi mdi-filter-off"></i> Фильтр', _: '<i class="mdi mdi-filter"></i> Фильтр (%d)' },
                        emptyPanes: "Нет панелей для отображения. :/",
                        emptyMessage: "(пусто)"
                    }
                },
                drawCallback: function () {
                    $(".dataTables_paginate > .pagination").addClass("pagination-rounded")
                },

                dom: 'Blfrtip',
                //вкл/откл разбиения на страницы
                paging: true,
                //вкл/откл поля поиска
                searching: true,
                //вкл/откл строки информации внизу таблицы
                info: true,
                //вкл/откл сортировки столбцов
                ordering: true,
                //сохранения состояния таблицы при возврате на нее
                stateSave: true,

                retrieve: true,

                /*"order": [[0, 'desc']],*/

                // выбор элементов на странице
                "lengthMenu": [10, 25, 50, 100],

                columnDefs: [
                    { "orderable": false, targets: -1 }, //отключение сортировки последнего столбца
                    {
                        searchPanes: {
                            show: true
                        },
                        targets: [0,3]
                    }
                ],

                buttons: {
                    dom: {
                        button: {
                            tag: 'button',
                            className: ''
                        }
                    },
                    buttons: [{
                        extend: 'excel',
                        className: 'btn btn-sm btn-outline-secondary',
                        titleAttr: 'Excel export.',
                        text: '<i class="far fa-file-excel"></i> Excel',
                        filename: 'excel-export',
                        extension: '.xlsx'
                    }, {
                        extend: 'copy',
                        className: 'btn btn-sm btn-outline-secondary',
                        titleAttr: 'Copy table data.',
                        text: '<i class="far fa-copy"></i> Копировать'
                    }]

                }
            });

            //Отдельная группа кнопок
            new $.fn.dataTable.Buttons(table, {
                buttons: [
                    { //Кнопка "Фильтр"
                        extend: 'searchPanes',
                        text: '<i class="mdi mdi-filter-off"></i> Фильтр',
                        className: "buttons-html5 btn btn-sm btn-outline-secondary",
                        titleAttr: 'Фильтр',
                        config: {
                            cascadePanes: true, // true or false!
                            columns: [0,3],
                            //clear: false
                        },
                        init: function (api, node, config) {
                            $(node).removeClass('btn-default').removeClass('dt-button')
                        }
                    },
                ]
            });

            // Перемещаем элементы таблицы в div
            //  верх таблицы
            $('#upp').append($('#dtable_length')); // кол-во строк на странице (length)
            $('#upp').append($('#dtable_filter')); // фильтр (filter)

            table.buttons(1, null).container().appendTo($('#upp'));
            // Перемещаем кнопки в div
            table.buttons(0, null).container().appendTo($('#upp'));

            //  низ таблицы
            $('#down_lr').append($('#dtable_info')); // инфо (info)
            $('#down_lr').append($('#dtable_paginate')); // страницы (paginate)

            // Стили элемента length
            $('#dtable_length>label').css("font-weight", "normal").css("white-space", "nowrap");
            $('#dtable_length>label>select').css("display", "inline-block").css("width", "auto");
            // Стили элемента filter
            $('#dtable_filter>label').css("font-weight", "normal").css("white-space", "nowrap");
            $('#dtable_filter>label>input').css("display", "inline-block").css("width", "auto");

            // Кнопка к элементу filter
            //table.buttons(1, null).container().css('float', 'right').addClass('px-2'); // right
            //$('#dtable_filter>').append(table.buttons(1, null).container());

            // еще пример для div
            //$('#fpopup').append(table.buttons(1, null).container().find('div'));

            // Пример стиля
            //$('#dtable_filter>input').addClass('d-inline-flex');

        });

    </script>

}

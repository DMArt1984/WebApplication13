
@{
    ViewData["Title"] = "TestTables9";
}

@section CSS_first {
    @Html.Partial("_DTable_CSS_first")
}

@*<div class="p-2">
    <button onclick="myFunction(true)">Select item</button>
    <button onclick="myFunction(false)">Deselect item</button>
    <button onclick="Test1()">Test #1 deselect </button>
    <button onclick="Test2()">Test #2 select</button>
    <button onclick="Test3()">Test #3 conditions</button>
    <button onclick="Test4()">Test #4 items of age</button>
    <button onclick="Test5()">Test #5 cookie</button>
    <button onclick="Test6()">Test #6 display</button>
</div>*@

<!-- Универсальный -->
<div id="uni" class="card card-body" style="display:none">
    <div class="">

        <div class="row row-cols-lg-auto g-3 align-items-center">
            <div class="col-12">
                <select id="filter_cols" class="form-select-sm">
                    <option value="" disabled selected>Выберите столбец</option>
                </select>
            </div>

            <div class="col-12">
                <button onclick="Clear()" id="clear" class="btn btn-danger btn-sm">Сбросить</button>
            </div>

            <div class="col-12">
                <select id="filter_conditions" class="form-select-sm" onchange="ChangeSelCond('filter_conditions', 'value1', 'value2')">
                    <option value="" disabled selected>Выберите сравнение</option>
                </select>
            </div>

            <div class="col-12">
                <input type="text" id="value1" name="value1" class="form-control-sm" style="display:none" value="">
            </div>

            <div class="col-12">
                <input type="text" id="value2" name="value2" class="form-control-sm" style="display:none" value="">
            </div>

            <div class="col-12">
                <button onclick="Use()" id="use" class="btn btn-primary btn-sm">Применить</button>
            </div>

        </div>


        @*<select id="filter_cols" class="form-control" style="visibility:hidden">
                <option value="" disabled selected>Выберите столбец</option>
            </select>
            <select id="filter_conditions" class="form-control" style="visibility:hidden">
                <option value="" disabled selected>Выберите сравнение</option>
            </select>
            <input type="text" id="value1" name="value1" class="form-control" style="visibility:hidden" value="">
            <input type="text" id="value2" name="value2" class="form-control" style="visibility:hidden" value="">
            <button onclick="Use()" id="use" class="btn btn-primary" style="visibility:hidden">Применить</button>
            <button onclick="Clear()" id="clear" class="btn btn-danger" style="visibility:hidden">Сбросить</button>*@

    </div>
</div>


<!-- Дополнительно к фильтру -->
<div id="dateform" class="card m-1" style="display: none">
    <div class="card-header">
        Выбор диапазона в фильтре
    </div>
    <div class="card-body d-flex justify-content-between pt-2">
        
        <div class="px-2">
            <label id="myfilter1" style="font-weight: normal; white-space: nowrap;">
                Возраст :
                <input type="number" id="age1" class="form-control form-control-sm" placeholder="" value="0" style="display: inline-block; width: auto;">
                -
                <input type="number" id="age2" class="form-control form-control-sm" placeholder="" value="0" style="display: inline-block; width: auto;">
                <button type="button" class="btn btn-secondary btn-sm" style="display: inline-block; width: auto;" onclick="Test7('Возраст', 'age1', 'age2', 'between')">Выбрать</button>
            </label>
        </div>

        <div class="px-2">
            <label id="myfilter2" style="font-weight: normal; white-space: nowrap;">
                Дата :
                <input type="date" id="date1" class="form-control form-control-sm" placeholder="" value="2019-08-19" style="display: inline-block; width: auto;">
                -
                <input type="date" id="date2" class="form-control form-control-sm" placeholder="" value="2019-08-19" style="display: inline-block; width: auto;">
                <button type="button" class="btn btn-secondary btn-sm" style="display: inline-block; width: auto;" onclick="Test7('Дата', 'date1', 'date2', 'between')">Выбрать</button>
            </label>
        </div>

    </div>
    @*<hr />*@
</div>


@*<form class="row row-cols-lg-auto g-3 align-items-center">
        <div class="col-12">
            <div class="form-check">
                <input class="form-check-input" type="checkbox" id="inlineFormCheck">
                <label class="form-check-label" for="inlineFormCheck">
                    Remember me
                </label>
            </div>
        </div>

        <div class="col-12">
            <input type="date" class="form-control" placeholder="" value="2019-08-19">
        </div>

        <div class="col-12">
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>
    </form>*@

@*<div class="col-4">
        <div class="mb-3 row">
            <label for="example-text-input" class="col-md-2 col-form-label">Text</label>
            <div class="col-md-4">
                <input class="form-control" type="date" value="Artisanal kale" id="example-text-input">
            </div>
        </div>
    </div>*@


<!-- Table 9 -->
<div class="card">
    <div class="card-header">
        <div id="upp" class="d-flex justify-content-between"></div>
    </div>
    <div class="card-body">

        <div id="top_lr" class="d-flex justify-content-between"></div>
        <a id="butCollapse" class="d-none btn btn-sm btn-secondary px-1 mx-1" data-bs-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="false" aria-controls="collapseOne"></a>
        <div id="collapseOne" class="collapse hide card border border-primary" aria-labelledby="headingOne" data-parent="#accordion" style=""></div>

        <table id="dtable" class="table table-striped mb-0" style="border-collapse: collapse; border-spacing: 0; width: 100%;">
            <thead class="bg-primary text-white">
                <tr>
                    <th>Имя</th>
                    <th>Должность</th>
                    <th>Адрес</th>
                    <th>Возраст</th>
                    <th>Дата</th>
                    <th>Зарплата</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><span class="bg-primary">Tiger Nixon</span></td>
                    <td><h3>System Architect</h3></td>
                    <td>Edinburgh</td>
                    <td>61</td>
                    <td><span class="bg-danger">2011-04-25</span></td>
                    <td>$320,800</td>
                </tr>
                <tr>
                    <td>Tiger Nixon</td>
                    <td>Accountant</td>
                    <td>Tokyo</td>
                    <td>63</td>
                    <td>2011-07-25</td>
                    <td>$170,750</td>
                </tr>
                <tr>
                    <td>Ashton Cox</td>
                    <td>Junior Technical Author</td>
                    <td>San Francisco</td>
                    <td>66</td>
                    <td>2009-01-12</td>
                    <td>$86,000</td>
                </tr>
                <tr>
                    <td>Cedric Kelly</td>
                    <td>Senior Javascript Developer</td>
                    <td>Edinburgh</td>
                    <td>22</td>
                    <td>2012-03-29</td>
                    <td>$433,060</td>
                </tr>
                <tr>
                    <td>Airi Satou</td>
                    <td>Accountant</td>
                    <td>Tokyo</td>
                    <td>33</td>
                    <td>2008-11-28</td>
                    <td>$162,700</td>
                </tr>
                <tr>
                    <td>Brielle Williamson</td>
                    <td>Integration Specialist</td>
                    <td>New York</td>
                    <td>61</td>
                    <td>2012-12-02</td>
                    <td>$372,000</td>
                </tr>
                <tr>
                    <td>Herrod Chandler</td>
                    <td>Sales Assistant</td>
                    <td>San Francisco</td>
                    <td>59</td>
                    <td>2012-08-06</td>
                    <td>$137,500</td>
                </tr>
                <tr>
                    <td>Rhona Davidson</td>
                    <td>Integration Specialist</td>
                    <td>Tokyo</td>
                    <td>55</td>
                    <td>2010-10-14</td>
                    <td>$327,900</td>
                </tr>
                <tr>
                    <td>Colleen Hurst</td>
                    <td>Javascript Developer</td>
                    <td>San Francisco</td>
                    <td>39</td>
                    <td>2009-09-15</td>
                    <td>$205,500</td>
                </tr>
                <tr>
                    <td>Sonya Frost</td>
                    <td>Software Engineer</td>
                    <td>Edinburgh</td>
                    <td>23</td>
                    <td>2008-12-13</td>
                    <td>$103,600</td>
                </tr>
                <tr>
                    <td>Jena Gaines</td>
                    <td>Office Manager</td>
                    <td>London</td>
                    <td>30</td>
                    <td>2008-12-19</td>
                    <td>$90,560</td>
                </tr>
                <tr>
                    <td>Quinn Flynn</td>
                    <td>Support Lead</td>
                    <td>Edinburgh</td>
                    <td>22</td>
                    <td>2013-03-03</td>
                    <td>$342,000</td>
                </tr>
                <tr>
                    <td>Charde Marshall</td>
                    <td>Regional Director</td>
                    <td>San Francisco</td>
                    <td>36</td>
                    <td>2008-10-16</td>
                    <td>$470,600</td>
                </tr>
                <tr>
                    <td>Haley Kennedy</td>
                    <td>Senior Marketing Designer</td>
                    <td>London</td>
                    <td>43</td>
                    <td>2012-12-18</td>
                    <td>$313,500</td>
                </tr>
                <tr>
                    <td>Tatyana Fitzpatrick</td>
                    <td>Regional Director</td>
                    <td>London</td>
                    <td>19</td>
                    <td>2010-03-17</td>
                    <td>$385,750</td>
                </tr>
                <tr>
                    <td>Michael Silva</td>
                    <td>Marketing Designer</td>
                    <td>London</td>
                    <td>66</td>
                    <td>2012-11-27</td>
                    <td>$198,500</td>
                </tr>
                <tr>
                    <td>Paul Byrd</td>
                    <td>Chief Financial Officer (CFO)</td>
                    <td>New York</td>
                    <td>64</td>
                    <td>2010-06-09</td>
                    <td>$725,000</td>
                </tr>
                <tr>
                    <td>Gloria Little</td>
                    <td>Systems Administrator</td>
                    <td>New York</td>
                    <td>59</td>
                    <td>2009-04-10</td>
                    <td>$237,500</td>
                </tr>
                <tr>
                    <td>Bradley Greer</td>
                    <td>Software Engineer</td>
                    <td>London</td>
                    <td>41</td>
                    <td>2012-10-13</td>
                    <td>$132,000</td>
                </tr>
                <tr>
                    <td>Dai Rios</td>
                    <td>Personnel Lead</td>
                    <td>Edinburgh</td>
                    <td>35</td>
                    <td>2012-09-26</td>
                    <td>$217,500</td>
                </tr>
                <tr>
                    <td>Jenette Caldwell</td>
                    <td>Development Lead</td>
                    <td>New York</td>
                    <td>30</td>
                    <td>2011-09-03</td>
                    <td>$345,000</td>
                </tr>
                <tr>
                    <td>Yuri Berry</td>
                    <td>Chief Marketing Officer (CMO)</td>
                    <td>New York</td>
                    <td>40</td>
                    <td>2009-06-25</td>
                    <td>$675,000</td>
                </tr>
                <tr>
                    <td>Caesar Vance</td>
                    <td>Pre-Sales Support</td>
                    <td>New York</td>
                    <td>21</td>
                    <td>2011-12-12</td>
                    <td>$106,450</td>
                </tr>
                <tr>
                    <td>Doris Wilder</td>
                    <td>Sales Assistant</td>
                    <td>Sydney</td>
                    <td>23</td>
                    <td>2010-09-20</td>
                    <td>$85,600</td>
                </tr>
                <tr>
                    <td>Angelica Ramos</td>
                    <td>Chief Executive Officer (CEO)</td>
                    <td>London</td>
                    <td>47</td>
                    <td>2009-10-09</td>
                    <td>$1,200,000</td>
                </tr>
                <tr>
                    <td>Gavin Joyce</td>
                    <td>Developer</td>
                    <td>Edinburgh</td>
                    <td>42</td>
                    <td>2010-12-22</td>
                    <td>$92,575</td>
                </tr>
                <tr>
                    <td>Jennifer Chang</td>
                    <td>Regional Director</td>
                    <td>Singapore</td>
                    <td>28</td>
                    <td>2010-11-14</td>
                    <td>$357,650</td>
                </tr>
                <tr>
                    <td>Brenden Wagner</td>
                    <td>Software Engineer</td>
                    <td>San Francisco</td>
                    <td>28</td>
                    <td>2011-06-07</td>
                    <td>$206,850</td>
                </tr>
                <tr>
                    <td>Fiona Green</td>
                    <td>Chief Operating Officer (COO)</td>
                    <td>San Francisco</td>
                    <td>48</td>
                    <td>2010-03-11</td>
                    <td>$850,000</td>
                </tr>
                <tr>
                    <td>Shou Itou</td>
                    <td>Regional Marketing</td>
                    <td>Tokyo</td>
                    <td>20</td>
                    <td>2011-08-14</td>
                    <td>$163,000</td>
                </tr>
                <tr>
                    <td>Michelle House</td>
                    <td>Integration Specialist</td>
                    <td>Sydney</td>
                    <td>37</td>
                    <td>2011-06-02</td>
                    <td>$95,400</td>
                </tr>
                <tr>
                    <td>Suki Burks</td>
                    <td>Developer</td>
                    <td>London</td>
                    <td>53</td>
                    <td>2009-10-22</td>
                    <td>$114,500</td>
                </tr>
                <tr>
                    <td>Prescott Bartlett</td>
                    <td>Technical Author</td>
                    <td>London</td>
                    <td>27</td>
                    <td>2011-05-07</td>
                    <td>$145,000</td>
                </tr>
                <tr>
                    <td>Gavin Cortez</td>
                    <td>Team Leader</td>
                    <td>San Francisco</td>
                    <td>22</td>
                    <td>2008-10-26</td>
                    <td>$235,500</td>
                </tr>
                <tr>
                    <td>Martena Mccray</td>
                    <td>Post-Sales support</td>
                    <td>Edinburgh</td>
                    <td>46</td>
                    <td>2011-03-09</td>
                    <td>$324,050</td>
                </tr>
                <tr>
                    <td>Unity Butler</td>
                    <td>Marketing Designer</td>
                    <td>San Francisco</td>
                    <td>47</td>
                    <td>2009-12-09</td>
                    <td>$85,675</td>
                </tr>
                <tr>
                    <td>Howard Hatfield</td>
                    <td>Office Manager</td>
                    <td>San Francisco</td>
                    <td>51</td>
                    <td>2008-12-16</td>
                    <td>$164,500</td>
                </tr>
                <tr>
                    <td>Hope Fuentes</td>
                    <td>Secretary</td>
                    <td>San Francisco</td>
                    <td>41</td>
                    <td>2010-02-12</td>
                    <td>$109,850</td>
                </tr>
                <tr>
                    <td>Vivian Harrell</td>
                    <td>Financial Controller</td>
                    <td>San Francisco</td>
                    <td>62</td>
                    <td>2009-02-14</td>
                    <td>$452,500</td>
                </tr>
                <tr>
                    <td>Timothy Mooney</td>
                    <td>Office Manager</td>
                    <td>London</td>
                    <td>37</td>
                    <td>2008-12-11</td>
                    <td>$136,200</td>
                </tr>
                <tr>
                    <td>Jackson Bradshaw</td>
                    <td>Director</td>
                    <td>New York</td>
                    <td>65</td>
                    <td>2008-09-26</td>
                    <td>$645,750</td>
                </tr>
                <tr>
                    <td>Olivia Liang</td>
                    <td>Support Engineer</td>
                    <td>Singapore</td>
                    <td>64</td>
                    <td>2011-02-03</td>
                    <td>$234,500</td>
                </tr>
                <tr>
                    <td>Bruno Nash</td>
                    <td>Software Engineer</td>
                    <td>London</td>
                    <td>38</td>
                    <td>2011-05-03</td>
                    <td>$163,500</td>
                </tr>
                <tr>
                    <td>Sakura Yamamoto</td>
                    <td>Support Engineer</td>
                    <td>Tokyo</td>
                    <td>37</td>
                    <td>2009-08-19</td>
                    <td>$139,575</td>
                </tr>
                <tr>
                    <td>Thor Walton</td>
                    <td>Developer</td>
                    <td>New York</td>
                    <td>61</td>
                    <td>2013-08-11</td>
                    <td>$98,540</td>
                </tr>
                <tr>
                    <td>Finn Camacho</td>
                    <td>Support Engineer</td>
                    <td>San Francisco</td>
                    <td>47</td>
                    <td>2009-07-07</td>
                    <td>$87,500</td>
                </tr>
                <tr>
                    <td>Serge Baldwin</td>
                    <td>Data Coordinator</td>
                    <td>Singapore</td>
                    <td>64</td>
                    <td>2012-04-09</td>
                    <td>$138,575</td>
                </tr>
                <tr>
                    <td>Zenaida Frank</td>
                    <td>Software Engineer</td>
                    <td>New York</td>
                    <td>63</td>
                    <td>2010-01-04</td>
                    <td>$125,250</td>
                </tr>
                <tr>
                    <td>Zorita Serrano</td>
                    <td>Software Engineer</td>
                    <td>San Francisco</td>
                    <td>56</td>
                    <td>2012-06-01</td>
                    <td>$115,000</td>
                </tr>
                <tr>
                    <td>Jennifer Acosta</td>
                    <td>Junior Javascript Developer</td>
                    <td>Edinburgh</td>
                    <td>43</td>
                    <td>2013-02-01</td>
                    <td>$75,650</td>
                </tr>
                <tr>
                    <td>Cara Stevens</td>
                    <td>Sales Assistant</td>
                    <td>New York</td>
                    <td>46</td>
                    <td>2011-12-06</td>
                    <td>$145,600</td>
                </tr>
                <tr>
                    <td>Hermione Butler</td>
                    <td>Regional Director</td>
                    <td>London</td>
                    <td>47</td>
                    <td>2011-03-21</td>
                    <td>$356,250</td>
                </tr>
                <tr>
                    <td>Lael Greer</td>
                    <td>Systems Administrator</td>
                    <td>London</td>
                    <td>21</td>
                    <td>2009-02-27</td>
                    <td>$103,500</td>
                </tr>
                <tr>
                    <td>Jonas Alexander</td>
                    <td>Developer</td>
                    <td>San Francisco</td>
                    <td>30</td>
                    <td>2010-07-14</td>
                    <td>$86,500</td>
                </tr>
                <tr>
                    <td>Shad Decker</td>
                    <td>Regional Director</td>
                    <td>Edinburgh</td>
                    <td>51</td>
                    <td>2008-11-13</td>
                    <td>$183,000</td>
                </tr>
                <tr>
                    <td>Michael Bruce</td>
                    <td>Javascript Developer</td>
                    <td>Singapore</td>
                    <td>29</td>
                    <td>2011-06-27</td>
                    <td>$183,000</td>
                </tr>
                <tr>
                    <td>Donna Snider</td>
                    <td>Customer Support</td>
                    <td>New York</td>
                    <td>27</td>
                    <td>2011-01-25</td>
                    <td>$112,000</td>
                </tr>
            </tbody>
        </table>
        <div id="down_lr" class="d-flex justify-content-between"></div>
    </div>
</div>


@section Scripts {

    @Html.Partial("_DTable_Scripts")

    <script>

        table = $(document).ready(function () {
            var table = $('#dtable').DataTable({
                language: {
                    emptyTable: "Нет данных для отображения в таблице",
                    zeroRecords: "Записи не найдены",
                    lengthMenu: "Показывать _MENU_ записей",
                    search: "Поиск: ",
                    info: "Показаны записи с _START_ по _END_. Всего записей _TOTAL_",
                    infoEmpty: "Нет записей",
                    infoFiltered: "(отфильтровано из _MAX_ записей)",
                    //подписи кнопок навигации по страницам
                    paginate: {
                        previous: "<i class='mdi mdi-chevron-left'>",
                        next: "<i class='mdi mdi-chevron-right'>"
                    },
                    //подписи в окне выбора фильтра
                    searchPanes: {
                        title: {
                            _: '<i class="mdi mdi-filter"></i> Выбрано фильтров: %d шт.',
                            0: '<i class="mdi mdi-filter-off"></i> Выбрать фильтр'
                        },
                        collapseMessage: 'Свернуть панели',
                        showMessage: 'Развернуть панели',
                        clearMessage: 'Сбросить фильтры',
                        collapse: { 0: '<i class="mdi mdi-filter-off"></i> Фильтр', _: '<i class="mdi mdi-filter"></i> Фильтр (%d)' },
                        emptyPanes: "Нет панелей для отображения. :/",
                        emptyMessage: "(пусто)"
                    }
                },
                drawCallback: function () {
                    $(".dataTables_paginate > .pagination").addClass("pagination-rounded")
                },
                dom: 'Plfrtip',

                searchPanes: {
                    cascadePanes: true,
                    collapse: false
                },

                //вкл/откл разбиения на страницы
                paging: true,
                //вкл/откл поля поиска
                searching: true,
                //вкл/откл строки информации внизу таблицы
                info: true,
                //вкл/откл сортировки столбцов
                ordering: true,
                // что это?
                retrieve: true,
                //сохранения состояния таблицы при возврате на нее
                stateSave: true,

                //"order": [[0, 'asc']],

                // выбор элементов на странице
                "lengthMenu": [5, 10, 25, 50, 100],

                columnDefs: [
                    { "orderable": false, targets: -1 }, //отключение сортировки последнего столбца
                    {
                        searchPanes: {
                            show: true
                        },
                        targets: [1, 2, 3, 4]
                    }
                ],
            });

            

            // Перемещаем элементы таблицы в div
            //  верх таблицы
            $('#top_lr').append($('#dtable_length')); // кол-во строк на странице (length)
            $('#butCollapse').removeClass('d-none');
            $('#butCollapse').append($('.dtsp-title')); // фильтр по столбцам
            $('#top_lr').append($('#dtable_filter')); // текстовый фильтр (filter)
            // кнопки экспорта в div
            //table.buttons(0, null).container().appendTo($('#dtable_filter'));

            //  низ таблицы
            $('#down_lr').append($('#dtable_info')); // инфо (info)
            $('#down_lr').append($('#dtable_paginate')); // страницы (paginate)

            // блок фильтрации
            $('#collapseOne').append($('.dtsp-panesContainer')); // фильтр по столбцам

            // Стили элемента length
            $('#dtable_length>label').css("font-weight", "normal").css("white-space", "nowrap");
            $('#dtable_length>label>select').css("display", "inline-block").css("width", "auto");
            // Стили элемента filter
            $('#dtable_filter>label').css("font-weight", "normal").css("white-space", "nowrap");
            $('#dtable_filter>label>input').css("display", "inline-block").css("width", "auto");

            // Кнопка Фильтр к элементу filter
            $('#dtable_filter').append($('#butCollapse'));

            // ---------------------------
            // Универсальный блок
            MyFilter();

            // Перемещение: Выбор даты
            $('#collapseOne').prepend($('#dateform')); // .dtsp-searchPanes
            $('#dateform').show();

            // dtsp-titleRow
            // $('.dtsp-titleRow').prepend($('#myfilter2')); //

            // ----------------------------
            

            //
            //var items = GetItemsFilter('Дата');
            //if (items.length > 0) {
            //    var first = items[0];
            //    var last = items[items.length - 1];
            //    $('#date1').val(first);
            //    $('#date2').val(last);
            //    //console.log($('#date1').val(), $('#date2').val());
            //}

            // Установить значения на диапазон
            FirstLastForColumn('Дата', 'date1', 'date2');
            FirstLastForColumn('Возраст', 'age1', 'age2');


        });

        // --------------------------------------------------------------------

        // --------------------------------------------------------------------

        function myFunction(make) {
            // внешнее изменение фильтра
            //var panes = document.querySelectorAll('.dtsp-searchPanes table#DataTables_Table_0.dataTable');
            var panes = document.querySelectorAll('.dtsp-searchPanes table[id^="DataTables_Table_"].dataTable');
            var pane1DataTable = $(panes[0]).DataTable();

            var titles = document.querySelectorAll('.dtsp-paneInputButton');

            //console.log(panes);
            console.log(titles);
            //console.log(pane1DataTable);
            //console.log(pane1DataTable.rows());

            //var arrNames = [];
            //Object.keys(titles).forEach(function (key) {
            //    var val = titles[key]["placeholder"];
            //    arrNames.push(val);
            //});
            console.log(QueryToArray(titles, 'placeholder'));


            pane1DataTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
                //console.trace(this.data().display);
                if ('Developer' == this.data().display) {
                    if (make) {
                        this.select();
                    } else {
                        this.deselect();
                    }
                }
            });

            console.trace('OK');
        }

        function Test1() {
            // 1.1)
            var names = FilterNames();
            console.log(names);
            var title = names[0];
            console.log(title);
            var items = GetItemsFilter(title);
            console.log(items);

            // 1.2)
            var filter = FilterQuery(0);
            FilterDeselectAll(filter);
        }

        function Test2() {

            // 2)
            var filter = FilterQuery(0);
            var arraySelect = ['Developer', 'Office Manager'];
            FilterSelect(filter, arraySelect);
        }

        function Test3() {
            console.log('empty', Conditions(500, 'empty'), Conditions('hello', 'empty'), Conditions(null, 'empty'));
            console.log('notempty', Conditions(500, 'notempty'), Conditions('hello', 'notempty'), Conditions(null, 'notempty'));
            console.log('equals', Conditions(450, 'equals', 450));
            console.log('notequals', Conditions(450, 'notequals', 450));
            console.log('gt', Conditions(100, 'gt', 99), Conditions('2018.01.08', 'gt', '2018.01.01'));
            console.log('gte', Conditions(100, 'gte', 100), Conditions('2018.01.08', 'gte', '2018.01.01'));
            console.log('lt', Conditions(97, 'lt', 99), Conditions('2018.01.08', 'lt', '2018.01.09'));
            console.log('lte', Conditions(99, 'lte', 99), Conditions('2018.01.08', 'lte', '2018.01.09'));
            console.log('contains', Conditions('2018.07.03', 'contains', '07'));
            console.log('notcontains', Conditions('2018.07.03', 'notcontains', '07'));
            console.log('between', Conditions(400, 'between', 300, 500), Conditions('2018.05', 'between', '2018.04', '2018.07'));
            console.log('notbetween', Conditions(400, 'notbetween', 300, 500), Conditions('2018.05', 'notbetween', '2018.04', '2018.07'));
        }

        function Test4() {
            var items = GetItemsFilter('Age');
            console.log(items);
            console.log(ConditionsItems(items, 'between', 30, 39));
        }

        function Test5() {
            console.log('old', getCookie('testValyue1'));
            setCookie('testValyue1', document.getElementById('value1').value, 1);
            console.log('new', getCookie('testValyue1'));
        }

        function Test6() {
            var panes = document.querySelectorAll('.dtsp-columns-1');
            console.log(panes);
            $(panes[0]).style += "display: none";
        }

        function Test7(nameCol, id1, id2, condition) {
            var date1 = document.getElementById(id1).value;
            var date2 = document.getElementById(id2).value;

            //console.log(date1, date2);

            var filter = FilterQueryByName(nameCol);
            var items = ItemsFilter(filter);

            var arraySelect = ConditionsItems(items, condition, date1, date2);
            FilterOnlySelect(filter, arraySelect);
        }

        // Универсальный блок
        function MyFilter() {
            CreateSelect('filter_cols', FilterNames(), null);
            CreateSelect('filter_conditions', ArrayConditions(), ArrayTextConditions());
            document.getElementById('value1').value = '';
            document.getElementById('value2').value = '';
            $('#uni').show();
            //ShowVisibilityId('uni');
        }



        // Установить фильтр
        function Use() {
            var nameCol = document.getElementById('filter_cols').value;
            if (nameCol != null) {
                var filter = FilterQueryByName(nameCol);
                var items = ItemsFilter(filter);
                var cond = document.getElementById('filter_conditions').value;
                var value1 = document.getElementById('value1').value;
                var value2 = document.getElementById('value2').value;
                //console.log(value1, value2);
                var arraySelect = ConditionsItems(items, cond, value1, value2);
                FilterOnlySelect(filter, arraySelect);
            }
        }

        // Очистить фильтр
        function Clear() {
            var nameCol = document.getElementById('filter_cols').value;
            if (nameCol != null) {
                var filter = FilterQueryByName(nameCol);
                FilterDeselectAll(filter);
            }
        }

        // Сохранить Cookie
        function setCookie(name, value, days) {
            var expires = "";
            if (days) {
                var date = new Date();
                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                expires = "; expires=" + date.toUTCString();
            }
            document.cookie = name + "=" + (value || "") + expires + "; path=/";
        }

        // Загрузить Cookie
        function getCookie(name) {
            var nameEQ = name + "=";
            var ca = document.cookie.split(';');
            for (var i = 0; i < ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0) == ' ') c = c.substring(1, c.length);
                if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
            }
            return null;
        }

        // Очистить Cookie
        function eraseCookie(name) {
            document.cookie = name + '=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';
        }

        // Установить первое и последнее значение для фильтра
        function FirstLastForColumn(nameCol, idFirst, idLast) {
            var items = GetItemsFilter(nameCol);
            if (items.length > 0) {
                var first = items[0];
                var last = items[items.length - 1];
                $('#' + idFirst).val(first);
                $('#' + idLast).val(last);
            }
        }

        // Список условий
        function ArrayConditions() {
            return ['empty', 'notempty', 'equals', 'notequals', 'gt', 'gte', 'lt', 'lte', 'contains', 'notcontains', 'between', 'notbetween'];
        }
        function ArrayTextConditions() {
            return ['пусто', 'не пусто', 'равно', 'не равно', 'больше', 'больше или равно', 'меньше', 'меньше или равно', 'содержит', 'не содержит', 'диапазон', 'вне диапазона'];
        }

        // Создать SELECT
        function CreateSelect(idElement, values, contents = null) {
            var select = document.getElementById(idElement);
            select.style.visibility = 'visible';
            select.length = 0;
            if (contents == null) {
                contents = values;
            }
            if (select != null) {
                for (var i = 0; i < values.length; i++) {
                    var val = values[i];
                    var cont = contents[i];
                    var el = document.createElement("option");
                    el.value = val;
                    el.textContent = cont;
                    select.appendChild(el);
                }
            }
        }

        // Событие для SELECT
        function ChangeSelCond(idSel, id1, id2) {
            var ifname = $('#' + idSel).val();
            //console.log(ifname);

            switch (ifname) {
                case 'empty':
                case 'notempty':
                    $('#' + id1).hide();
                    $('#' + id2).hide();
                    break;

                case 'equals':
                case 'notequals':
                case 'gt':
                case 'gte':
                case 'lt':
                case 'lte':
                case 'contains':
                case 'notcontains':
                    $('#' + id1).show();
                    $('#' + id2).hide();
                    break;

                case 'between':
                case 'notbetween':
                    $('#' + id1).show();
                    $('#' + id2).show();
                    break;

                default:
                    $('#' + id1).hide();
                    $('#' + id2).hide();
                    break;
            }

        }

        // Условия для набора (списка значений)
        function ConditionsItems(items, ifname, value1 = null, value2 = null) {
            var arrNames = [];
            items.forEach(function (value, index, array) {
                if (Conditions(value, ifname, value1, value2)) {
                    arrNames.push(value);
                }
            });
            return arrNames;
        }

        // Получение результата условий
        function Conditions(value, ifname, value1 = null, value2 = null) {
            switch (ifname) {
                case 'empty':
                    return Empty(value);
                    break;

                case 'notempty':
                    return NotEmpty(value);
                    break;

                case 'equals':
                    return Equals(value, value1);
                    break;

                case 'notequals':
                    return NotEquals(value, value1);
                    break;

                case 'gt':
                    return GT(value, value1);
                    break;

                case 'gte':
                    return GTE(value, value1);
                    break;

                case 'lt':
                    return LT(value, value1);
                    break;

                case 'lte':
                    return LTE(value, value1);
                    break;

                case 'contains':
                    return Contains(value, value1);
                    break;

                case 'notcontains':
                    return NotContains(value, value1);
                    break;

                case 'between':
                    return Between(value, value1, value2);
                    break;

                case 'notbetween':
                    return NotBetween(value, value1, value2);
                    break;

                default:
                    return false;
                    break;
            }
        }

        // Условия сравнения
        function Empty(value) {
            return value == null;
        }
        function NotEmpty(value) {
            return value != null;
        }
        function Equals(left, right) {
            return left == right;
        }
        function NotEquals(left, right) {
            return left != right;
        }
        function GT(left, right) {
            return left > right;
        }
        function GTE(left, right) {
            return left >= right;
        }
        function LT(left, right) {
            return left < right;
        }
        function LTE(left, right) {
            return left <= right;
        }
        function Contains(value, subString) {
            return value.includes(subString) == true;
            //return value.indexOf(subString) !== -1;
        }
        function NotContains(value, subString) {
            return value.includes(subString) == false;
            //return value.indexOf(subString) == -1;
        }
        function Between(value, min, max) {
            return value >= min && value <= max;
        }
        function NotBetween(value, min, max) {
            return value < min || value > max;
        }

        // Снять весь выбор из фильтра
        function FilterDeselectAll(filter) {
            if (filter != null) {
                filter.rows().deselect();
            } else {
                console.log('FilterDeselectAll == ERR');
            }
        }

        // Снять выбор из фильтра
        function FilterDeselect(filter) {
            if (filter != null) {
                //filter.rows().every(function (rowIdx, tableLoop, rowLoop) {
                //    if (jQuery.inArray(this.data().display, arraySelect) !== -1) {
                //        this.deselect();
                //    }
                //});

                filter.rows(function (idx, data, node) {
                    return (jQuery.inArray(data.display, arraySelect) !== -1) ?
                        true : false;
                }).deselect();
            } else {
                console.log('FilterDeselect == ERR');
            }
        }

        // Добавить выбор в фильтре
        function FilterSelect(filter, arraySelect) {
            if (filter != null) {

                //filter.rows().every(function (rowIdx, tableLoop, rowLoop) {
                //    if (jQuery.inArray(this.data().display, arraySelect) !== -1) {
                //        this.select();
                //    }
                //});

                //filter.rows().select();

                filter.rows(function (idx, data, node) {
                    return (jQuery.inArray(data.display, arraySelect) !== -1) ?
                        true : false;
                }).select();

                //console.log("OK SELECT");

            } else {
                console.log('FilterSelect == ERR');
            }
        }

        // Сделать выбор в фильтре
        function FilterOnlySelect(filter, arraySelect) {
            FilterDeselectAll(filter);
            FilterSelect(filter, arraySelect);
        }


        // Получить набор (список элементов) фильтра по имени столбца
        function GetItemsFilter(nameCol) {
            //var filters = FilterNames(); // имена фильтров (столбцов)
            //console.log(filters);
            //var indexPane = GetIndexArray(filters, nameCol); // индекс фильтра
            //console.log(indexPane);
            //console.log('next >');
            //var filter = FilterQuery(indexPane); // фильтр
            //console.log('filter:');
            //console.log(filter);
            //console.log('items:');
            var items = ItemsFilter(FilterQueryByName(nameCol));
            return items;
        }

        // Получить фильтр по имени
        function FilterQueryByName(nameCol) {
            var filters = FilterNames(); // имена фильтров (столбцов)
            if (filters.length >= 1) {
                var indexPane = GetIndexArray(filters, nameCol); // индекс фильтра
                var filter = FilterQuery(indexPane); // фильтр
                return filter;
            } else {
                return null;
            }
        }

        // Получить имена столбцов для фильтров
        function FilterNames() {
            var titles = document.querySelectorAll('.dtsp-paneInputButton');
            return QueryToArray(titles, 'placeholder');
        }

        // Получить индекс фильтра по имени столбца
        function FilterIndex(nameCol) {
            var titles = document.querySelectorAll('.dtsp-paneInputButton');
            var array = QueryToArray(titles, 'placeholder');
            return GetIndexArray(array, nameCol);
        }

        // Получить фильтр
        function FilterQuery(indexPane) {
            if (indexPane <= -1) {
                return null;
            }
            var panes = document.querySelectorAll('.dtsp-searchPanes table[id^="DataTables_Table_"].dataTable');
            //console.log('FilterQuery >');
            //console.log(panes.length);
            if (indexPane >= panes.length) {
                return null;
            }
            //console.log('FilterQuery #r');
            return $(panes[indexPane]).DataTable();
        }

        // Получить набор фильтра
        function ItemsFilter(filter) {
            var arrNames = [];
            filter.rows().every(function (rowIdx, tableLoop, rowLoop) {
                arrNames.push(this.data().display);
            });
            return arrNames;
        }

        // Конвертация запроса в массив
        function QueryToArray(nodes, nameKey) {
            var arrNames = [];
            Object.keys(nodes).forEach(function (key) {
                var val = nodes[key][nameKey];
                arrNames.push(val);
            });
            return arrNames;
        }

        // Получить индекс массива по значению
        function GetIndexArray(array, nameValue) {
            return array.indexOf(nameValue);
        }

        // Показать или скрыть элемент по ID
        function HideVisibilityId(id) {
            document.getElementById(id).style.visibility = 'hidden'; // скрыть
        }
        function ShowVisibilityId(id) {
            document.getElementById(id).style.visibility = 'visible'; // показать
        }

    </script>

}
@model FactPortal.Models.IndexStat

@{
    ViewData["Title"] = "Главная";
    //List<Alert> Alerts = ViewBag.Alerts;
}

@section CSS_first {
    <!-- DataTables -->
    <link href="~/assets/libs/datatables.net-bs4/css/dataTables.bootstrap4.min.css" rel="stylesheet" type="text/css" />
    <link href="~/assets/libs/datatables.net-buttons-bs4/css/buttons.bootstrap4.min.css" rel="stylesheet" type="text/css" />

    <!-- Responsive datatable examples -->
    <link href="~/assets/libs/datatables.net-responsive-bs4/css/responsive.bootstrap4.min.css" rel="stylesheet" type="text/css" />
}
<style type="text/css">


    .pie {
        --p: 20;
        --b: 22px;
        --c: darkred;
        --w: 150px;
        width: var(--w);
        aspect-ratio: 1;
        position: relative;
        display: inline-grid;
        margin: 5px;
        place-content: center;
        font-size: 25px;
        font-weight: bold;
        font-family: sans-serif;
    }

        .pie:before,
        .pie:after {
            content: "";
            position: absolute;
            border-radius: 50%;
        }

        .pie:before {
            inset: 0;
            background: radial-gradient(farthest-side,var(--c) 98%,#0000) top/var(--b) var(--b) no-repeat, conic-gradient(var(--c) calc(var(--p)*1%),#0000 0);
            -webkit-mask: radial-gradient(farthest-side,#0000 calc(99% - var(--b)),#000 calc(100% - var(--b)));
            mask: radial-gradient(farthest-side,#0000 calc(99% - var(--b)),#000 calc(100% - var(--b)));
        }

        .pie:after {
            inset: calc(50% - var(--b)/2);
            background: var(--c);
            transform: rotate(calc(var(--p)*3.6deg)) translateY(calc(50% - var(--w)/2));
        }

    .animate {
        animation: p 1s .5s both;
    }

    .no-round:before {
        background-size: 0 0,auto;
    }

    .no-round:after {
        content: none;
    }
    }
</style>

@{
    string Statusfull(int Status)
    {
        switch (Status)
        {
            case 1:
                return "10";
            case 2:
                return "20";
            case 5:
                return "50";
            case 8:
                return "80";
            case 9:
                return "100";
            default:
                return "0";
        }
    }
    string StatusRus_(int Status)
    {
        switch (Status)
        {
            case 0:
                return "ожидание";
            case 1:
                return "редактирование";
            case 2:
                return "работа";
            case 3:
                return "частично";
            case 4:
                return "выполнено";
            default:
                return "-";
        }
    }
    string StatusColor(int Status)
    {
        switch (Status)
        {
            case 1:
                return "#FF0000";
            case 2:
                return "#FFA500";
            case 3:
                return "#FF8C00";
            case 4:
                return "#008B8B";
            case 5:
                return "#9ACD32";
            default:
                return "#E0FFFF";
        }
    }

}

@{
    int count_of_list(List<int> lst)
    {
        int Count = 0;
        foreach (var item in lst) { Count += item; }
        return Count;
    }
    List<int> GetStatus_1(List<Statistic> List_)
    {
        List<int> List_of_stat = new List<int>() { 0, 0 };
        @foreach (var item in List_.OrderBy(x => x.DT))
        {
            if (item.Status == 1) List_of_stat[1]++;
            else List_of_stat[0]++;
        }
        return List_of_stat;
    }
    List<int> GetStatus_2(List<Statistic> List_)
    {
        List<int> List_of_stat = new List<int>() { 0, 0 };
        @foreach (var item in List_.OrderBy(x => x.DT))
        {

            if (item.Status == 9 && item.DT.Split(".")[1].ToArray()[1].ToString() == Model.Today.Month.ToString()) List_of_stat[1]++;
            else List_of_stat[0]++;
        }
        return List_of_stat;
    }
    List<int> GetStatus_3(List<Statistic> List_)
    {
        List<int> List_of_stat = new List<int>() { 0, 0, 0, 0, 0, 0 };
        @foreach (var item in List_.OrderBy(x => x.DT))
        {
            if (item.Status == 1) List_of_stat[1]++;
            else if (item.Status == 2) List_of_stat[2]++;
            else if (item.Status == 5) List_of_stat[3]++;
            else if (item.Status == 8) List_of_stat[4]++;
            else if (item.Status == 9) List_of_stat[5]++;
            else List_of_stat[0]++;
        }
        return List_of_stat;
    }
    void showalldiag(List<int> List_of_stat, bool needcolor = false)
    {
        <div class="pie" style="--p:100; --c:#696969;  position: absolute;"> </div>
        var g = 0;
        List<List<int>> pairs = new List<List<int>>();
        for (var i = 1; i < List_of_stat.Count(); i++)
        {
            var cnt = count_of_list(List_of_stat);
            double objofl = List_of_stat[i];
            double Value = (objofl / cnt) * 100;

            g += Convert.ToInt32(Math.Round(Value));
            List<int> pai = new List<int>() { g, i, Convert.ToInt32(Math.Round(Value)) };
            pairs.Add(pai);

        }

        for (var i = pairs.Count() - 1; i >= 0; i--)
        {
            if (needcolor)
            {<div class="pie" style="--p:@pairs[i][0]; --c:#9ACD32; position: absolute;"> </div>}
            else
            {<div class="pie" style="--p:@pairs[i][0]; --c:@StatusColor(pairs[i][1]); position: absolute;"> </div>
            }
        }

        for (var i = pairs.Count() - 1; i >= 0; i--)
        {
            if (needcolor)
            {<div style="margin-left:200px;  position:relative; margin-top:20px;"><div style=" background-color:#9ACD32 ; width: 10px; height:10px;display: inline-block;border-radius: 50px; ">  </div><div style="display: inline-block; padding-left:10px"> @pairs[i][2]% выполнено</div></div>}
        else
        {<div style="margin-left:200px;  position:relative; margin-top:20px;"><div style=" background-color:@StatusColor(pairs[i][1]) ; width: 10px; height:10px;display: inline-block;border-radius: 50px; ">  </div><div style="display: inline-block; padding-left:10px"> @pairs[i][2]% @StatusRus_(i)</div></div>}
}



}
}
<ol class="breadcrumb m-0 d-none">
    <li class="breadcrumb-item"><a href="javascript: void(0);">Email</a></li>
    <li class="breadcrumb-item active">Inbox</li>
</ol>

<div class="d-flex justify-content-around" style="min-height:200px">
    <div class="col-xl-6 col-sm-6">
        <div class="card">
            <div class="card-body" style="min-height:270px">
                <h5>Процент всего обслуживания</h5>
                @{showalldiag(GetStatus_3(Model.Statistics)); }

            </div>
        </div>
        <!-- end card-body -->
    </div>
    <!-- end card -->


    <div class="col-xl-3 col-sm-6">
        <div class="card">
            <div class="card-body" style="min-height:270px">
                <h5>  Процент объектов с произведенным обслуживанием за этот месяц. </h5>
                @{showalldiag(GetStatus_2(Model.Statistics), true); }

            </div>
        </div>
        <!-- end card-body -->
    </div>
    <!-- end card -->
    <!-- end col -->

    <div class="col-xl-3 col-sm-6">
        <div class="card">
            <div class="card-body" style="min-height:270px">
                <h5>Процент объектов  с  неначатым обслуживанием от всех объектов в системе</h5>
                @{showalldiag(GetStatus_1(Model.Statistics)); }

            </div>
        </div>
        <!-- end card-body -->
    </div>
    <!-- end card -->
</div>
<!-- end col -->
<h5><span class="text-danger me-2">Последние 5 сообщений о неисправности</span></h5>
<table id="datatable" class="table table-striped mb-0 table-bordered" style="border-collapse: collapse; border-spacing: 0px; width: 100%;" role="grid" aria-describedby="datatable_info">
    <thead class="bg-primary text-white">
        <tr>
            <th>ID</th>
            <th>Дата и время</th>
            <th>Объект</th>
            <th>Статус</th>
            <th>Сотрудник</th>
            <th>Комментарий</th>
        </tr>
    </thead>
    <tbody>
        @{var i = 0;}
        @foreach (var item in Model.Statistics.Where(x => x.Status == 1).OrderBy(x => x.DT))
        {
            i++;
            if (i > 4)
            {
                break;
            }
            <tr>
                <th scope="row">@item.Id</th>
                <td>@item.DT</td>
                <td>
                    @if (item.ObjectActive)
                    {<a asp-controller="Business" asp-action="objofslist" asp-route-id="@item.ObjectId">@item.ObjectName <small>(id:@item.ObjectId)</small></a>}
                else
                {<span class="text-danger me-2">@item.ObjectName</span>}
            </td>
            <td> <span class="text-danger me-2"> @item.StatusRus() </span></td>
            <td>
                @if (item.UserActive)
                {<a asp-controller="Admin" asp-action="Profile" asp-route-Email="@item.UserEmail">@item.UserName <small>(@item.UserEmail)</small></a>}
            else
            {<span class="text-danger me-2">@item.UserName</span>}
        </td>
        <td>@item.Description</td>
    </tr>
}
    </tbody>
</table>
<br>
<h5>Последние 5 сообщений о выполненных обслуживаниях</h5>
<table id="datatable" class="table table-striped mb-0 table-bordered" style="border-collapse: collapse; border-spacing: 0px; width: 100%;" role="grid" aria-describedby="datatable_info">
    <thead class="bg-primary text-white">
        <tr>
            <th>ID</th>
            <th>Дата и время</th>
            <th>Объект</th>
            <th>Статус</th>
            <th>Сотрудник</th>
            <th>Комментарий</th>
        </tr>
    </thead>
    <tbody>
        @{ i = 0;}
        @foreach (var item in Model.Statistics.Where(x => x.Status == 9).OrderBy(x => x.DT))
        {
            i++;
            if (i > 4)
            {
                break;
            }
            <tr>
                <th scope="row">@item.Id</th>
                <td>@item.DT</td>
                <td>
                    @if (item.ObjectActive)
                    {<a asp-controller="Business" asp-action="objofslist" asp-route-id="@item.ObjectId">@item.ObjectName <small>(id:@item.ObjectId)</small></a>}
                else
                {<span class="text-danger me-2">@item.ObjectName</span>}
            </td>
            <td>  <span class="text-success me-2"> @item.StatusRus() </span></td>
            <td>
                @if (item.UserActive)
                {<a asp-controller="Admin" asp-action="Profile" asp-route-Email="@item.UserEmail">@item.UserName <small>(@item.UserEmail)</small></a>}
            else
            {<span class="text-danger me-2">@item.UserName</span>}
        </td>
        <td>@item.Description</td>
    </tr>
}
    </tbody>
</table>



@section Scripts {
    <!-- apexcharts js -->
    <script src="~/assets/libs/apexcharts/apexcharts.min.js"></script>
}
@model IEnumerable<UserInfo>
@{
    ViewData["Title"] = "Пользователи";
    bool IsAdmin = ViewContext.HttpContext.User.IsInRole("Admin") || ViewContext.HttpContext.User.IsInRole("SuperAdmin");
}

@section CSS_first {
    @Html.Partial("_DTable_CSS_first")
}


<div class="card">
    <div class="card-header bg-soft-secondary d-flex justify-content-between align-items-center">
        <a class="btn btn-light btn btn-block" title="Объекты" asp-controller="Business" asp-action="Index"><i class="mdi mdi-engine fa-lg"></i> Перейти в объекты</a>
        @if (IsAdmin)
        {
            <!-- Добавить -->
            <a class="btn btn-secondary btn btn-block" title="Добавить" asp-controller="Admin" asp-action="Register"><i class="mdi mdi-account-plus"></i> Регистрация нового пользователя</a>
        }
    </div>
    <div class="card-body">
        <div class="">
            <div id="upp" class="d-flex justify-content-between"></div>
                    <table id="dtable" class="table table-striped mb-0" style="border-collapse: collapse; border-spacing: 0px; width: 100%;" role="grid" aria-describedby="datatable_info">
                        <thead class="bg-primary text-white">
                            <tr>
                                <th class="d-none">ID</th>
                                <th>Email</th>
                                <th class="d-none">Email</th>
                                <th>Фото</th>
                                <th>ФИО</th>
                                <th>Роли</th>
                                <th class="d-none">Роли</th>
                                <th>Телефон</th>
                                <th class="d-none">Телефон</th>
                                <th>Должность</th>
                                <th class="d-none">Компания</th>
                                <th class="d-none">Дополнительно</th>
                                <th class="d-none">Редактировать</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td class="d-none" style="font-size:80%" valign="middle">@item.User.Id</td>

                                    <td valign="middle" scope="row">

                                        <a asp-action="Profile" asp-route-Email="@item.User.Email" asp-route-ViewEditor="true">
                                            <!--href="mailto:item.User.Email"-->
                                            @if (item.User.EmailConfirmed)
                                            {
                                                <i class="ri-checkbox-fill align-middle"></i>
                                            }
                                            @item.User.Email
                                        </a>
                                    </td>
                                    <td class="d-none">
                                        @item.User.Email
                                    </td>
                                    <td style="align-content:center">
                                        @try
                                        {
                                            @if (@item.User.Photo != null)
                                            {
                                                <img style="width:50px;height:50px; object-fit:cover; border-radius:3px" src="data:image/*;base64,@(Convert.ToBase64String(@item.User.Photo))" alt="Header Avatar">
                                            }
                                        }
                                        catch
                                        {

                                        }
                                    </td>
                                    <td valign="middle">@item.User.FullName</td>
                                    <td valign="middle">
                                        @{
                                            foreach (var role in @item.Roles.Distinct())
                                            {
                                                var rusname = item.User.getRoleName(@role);
                                                switch (role.ToLower())
                                                {
                                                    case "superadmin":
                                                        <span class="badge bg-dark">@rusname</span>
                                                        break;
                                                    case "admin":
                                                        <span class="badge bg-info">@rusname</span>
                                                        break;
                                                    case "moderator":
                                                        <span class="badge bg-soft-primary text-primary">@rusname</span>
                                                        break;
                                                    default:
                                                        <span class="badge bg-light">@rusname</span>
                                                        break;
                                                }

                                            }
                                        }
                                    </td>
                                    <td class="d-none">
                                        @{
                                            foreach (var role in @item.Roles.Distinct())
                                            {
                                                var rusname = $" {item.User.getRoleName(@role)} ";
                                                @rusname
                                            }
                                        }
                                    </td>
                                    <td valign="middle">

                                        @if (item.User.PhoneNumberConfirmed)
                                        {
                                            <i class="ri-checkbox-fill align-middle"></i>
                                        }
                                        @item.User.PhoneNumber

                                    </td>
                                    <td class="d-none">@item.User.PhoneNumber</td>
                                    <td valign="middle">@String.Join(", ", @item.Claims.Where(x => x.Type.ToLower() == "job").Select(y => y.Value))</td>
                                    <td valign="middle" class="d-none">@String.Join(", ", @item.Claims.Where(x => x.Type.ToLower() == "company").Select(y => y.Value).Distinct())</td>


                                    <td valign="middle" class="d-none" style="font-size:80%">
                                        <!--String.Join(", ", item.Claims.Where(x => x.Type.ToLower() != "company").Select(x => x.Type + "=" + x.Value))-->
                                        <ul class="card-text">
                                            @foreach (var cl in item.Claims.Where(x => x.Type.ToLower() != "company"))
                                            {
                                                <li>@cl.Type = @cl.Value</li>
                                            }
                                        </ul>
                                    </td>



                                    <td class="d-none" valign="middle">
                                        <!--
                        <a href="Url.ActionLink("Profile","Admin", new {Email = item.User.Email})" class="btn btn-outline-secondary" title="Профиль">
                            <i class="mdi mdi-face" style="font-size:120%"></i>
                        </a>

                        Html.ActionLink("войти", "Profile", "Admin", new { Email = item.User.Email, ViewEditor = true })
                             -->
                                        <a class="btn btn-outline-secondary btn-sm edit" title="Редактировать" asp-action="Profile" asp-route-Email="@item.User.Email" asp-route-ViewEditor="true">
                                            <i class="fas fa-pencil-alt"></i>
                                        </a>

                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
            <div id="down_lr" class="d-flex justify-content-between"></div>
        </div>
    </div>
</div>


@section Scripts {
    @Html.Partial("_DTable_Scripts")

    <script>
        $(document).ready(function () {
            var table = $('#dtable').DataTable({
                language: {
                    emptyTable: "Нет данных для отображения в таблице",
                    zeroRecords: "Записи не найдены",
                    lengthMenu: "Показывать _MENU_ записей",
                    search: "Поиск: ",
                    info: "Показаны записи с _START_ по _END_. Всего записей _TOTAL_",
                    infoEmpty: "Нет записей",
                    infoFiltered: "(отфильтровано из _MAX_ записей)",
                    //подписи кнопок навигации по страницам
                    paginate: {
                        previous: "<i class='mdi mdi-chevron-left'>",
                        next: "<i class='mdi mdi-chevron-right'>"
                    },
                    //подписи в окне выбора фильтра
                    searchPanes: {
                        title: {
                            _: 'Выбрано фильтров: %d шт.',
                            0: 'Фильтры не выбраны'
                        },
                        collapseMessage: 'Свернуть панели',
                        showMessage: 'Развернуть панели',
                        clearMessage: 'Сбросить фильтры',
                        collapse: { 0: '<i class="mdi mdi-filter-off"></i> Фильтр', _: '<i class="mdi mdi-filter"></i> Фильтр (%d)' },
                        emptyPanes: "Нет панелей для отображения. :/",
                        emptyMessage: "(пусто)"
                    }
                },
                drawCallback: function () {
                    $(".dataTables_paginate > .pagination").addClass("pagination-rounded")
                },

                dom: 'Blfrtip',
                //вкл/откл разбиения на страницы
                paging: true,
                //вкл/откл поля поиска
                searching: true,
                //вкл/откл строки информации внизу таблицы
                info: true,
                //вкл/откл сортировки столбцов
                ordering: true,
                //сохранения состояния таблицы при возврате на нее
                stateSave: true,

                retrieve: true,

                //"order": [[0, 'desc']],

                // выбор элементов на странице
                "lengthMenu": [10, 25, 50, 100],

                columnDefs: [
                    { "orderable": false, targets: -1 }, //отключение сортировки последнего столбца
                    //{
                    //    target: 1,
                    //    visible: false,
                    //    searchable: true,
                    //},
                    {
                        searchPanes: {
                            show: true
                        },
                        targets: [2, 4, 6, 8,9]
                    }
                ],

                buttons: {
                    dom: {
                        button: {
                            tag: 'button',
                            className: ''
                        }
                    },
                    buttons: [{
                        extend: 'excel',
                        className: 'btn btn-sm btn-outline-secondary',
                        titleAttr: 'Excel export.',
                        text: '<i class="far fa-file-excel"></i> Excel',
                        filename: 'excel-export',
                        extension: '.xlsx'
                    }, {
                        extend: 'copy',
                        className: 'btn btn-sm btn-outline-secondary',
                        titleAttr: 'Copy table data.',
                        text: '<i class="far fa-copy"></i> Копировать'
                    }]

                }
            });

            //Отдельная группа кнопок
            new $.fn.dataTable.Buttons(table, {
                buttons: [
                    { //Кнопка "Фильтр"
                        extend: 'searchPanes',
                        text: '<i class="mdi mdi-filter-off"></i> Фильтр',
                        className: "buttons-html5 btn btn-sm btn-outline-secondary",
                        titleAttr: 'Фильтр',
                        config: {
                            cascadePanes: true, // true or false!
                            columns: [2, 4, 6, 8,9],
                            //clear: false
                        },
                        init: function (api, node, config) {
                            $(node).removeClass('btn-default').removeClass('dt-button')
                        }
                    },
                ]
            });




            // Перемещаем элементы таблицы в div
            //  верх таблицы
            $('#upp').append($('#dtable_length')); // кол-во строк на странице (length)
            $('#upp').append($('#dtable_filter')); // фильтр (filter)

            table.buttons(1, null).container().appendTo($('#upp'));
            // Перемещаем кнопки в div
            table.buttons(0, null).container().appendTo($('#upp'));

            //  низ таблицы
            $('#down_lr').append($('#dtable_info')); // инфо (info)
            $('#down_lr').append($('#dtable_paginate')); // страницы (paginate)

            // Стили элемента length
            $('#dtable_length>label').css("font-weight", "normal").css("white-space", "nowrap");
            $('#dtable_length>label>select').css("display", "inline-block").css("width", "auto");
            // Стили элемента filter
            $('#dtable_filter>label').css("font-weight", "normal").css("white-space", "nowrap");
            $('#dtable_filter>label>input').css("display", "inline-block").css("width", "auto");

            // Кнопка к элементу filter
            //table.buttons(1, null).container().css('float', 'right').addClass('px-2'); // right
            //$('#dtable_filter>').append(table.buttons(1, null).container());

            // еще пример для div
            //$('#fpopup').append(table.buttons(1, null).container().find('div'));

            // Пример стиля
            //$('#dtable_filter>input').addClass('d-inline-flex');

        });

    </script>

}
